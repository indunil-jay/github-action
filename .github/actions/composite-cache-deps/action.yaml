name: Cache Node and NPM  Dependencies
description: This action allows to cache both cache and npm Dependencies based on the package*.json file.

inputs:
    node-version:
        description: NodeJS version to use
        default: 22.x
        required: true
    working-dir:
        description: The working directory of the application
        default: .
        required: false
    target-env:
        description: '"dev" or "prod" . Controls wheather dev Dependencies are Installed'
        default: dev
        required: false

outputs:
    installed-deps:
        description: "wheather dependenu were installed or not"
        value: ${{ steps.cache-key.outputs.cache-hit!='true'}}
    random-output:
        description: some value
        value: ${{step.random.outputs.random}}

runs:
    using: composite
    steps:
        - name: Setup NodeJS version ${{ inputs.node-version }}
          uses: actions/setup-node@v3
          with:
              node-version: ${{ inputs.node-version }}

        - name: Cache Dependencies
          uses: actions/cache@v3
          id: cache-key
          with:
              path: ${{inputs.working-dir}}/node_modules
              key: node-modules-${{inputs.target-env}}-${{hashFiles(format('{0}/{1}',inputs.working-dir,'package-lock.json'))}}

        - name: Install the Dependencies
          if: ${{steps.cache-key.outputs.cache-hit != 'true'}}
          run: ${{inputs.target-env == 'dev' && 'npm ci' || 'npm ci --omit=dev'}}
          shell: bash
          working-directory: ${{inputs.working-dir}}

        # - name: Install the Dependencies
        #   if: ${{steps.cache-key.outputs.cache-hit != 'true' && inputs.target-env != 'dev'}}
        #   run: npm ci --omit=dev
        #   shell: bash
        #   working-directory: ${{inputs.working-dir}}
        - name: Random output
          id: random
          shell: bash
          run: echo "random=123" >> $GITHUB_OUTPUT
